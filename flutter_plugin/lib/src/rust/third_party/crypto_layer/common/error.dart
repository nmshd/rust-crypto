// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.6.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import '../common.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'error.freezed.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `clone`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `source`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CalError>>
abstract class CalError implements RustOpaqueInterface {
  Future<String> backtrace();

  Future<CalErrorKind> errorKind();
}

abstract class ToCalError {
  Future<T> errInternal();
}

@freezed
sealed class CalErrorKind with _$CalErrorKind {
  const CalErrorKind._();

  /// This error is returned on calling functions that are not implemented.
  const factory CalErrorKind.notImplemented() = CalErrorKind_NotImplemented;

  /// One or more of the parameters supplied are invalid for said function.
  const factory CalErrorKind.badParameter({
    required String description,

    /// `true` if caused within this library. `false` if caused by another library.
    required bool internal,
  }) = CalErrorKind_BadParameter;
  const factory CalErrorKind.missingKey({
    required String keyId,
    required KeyType keyType,
  }) = CalErrorKind_MissingKey;

  /// The value requested could not be found.
  const factory CalErrorKind.missingValue({
    required String description,

    /// `true` if caused within this library. `false` if caused by another library.
    required bool internal,
  }) = CalErrorKind_MissingValue;

  /// A cryptographic operation failed.
  const factory CalErrorKind.failedOperation({
    required String description,

    /// `true` if caused within this library. `false` if caused by another library.
    required bool internal,
  }) = CalErrorKind_FailedOperation;

  /// Failed to initialize a provider.
  const factory CalErrorKind.initializationError({
    required String description,

    /// `true` if caused within this library. `false` if caused by another library.
    required bool internal,
  }) = CalErrorKind_InitializationError;

  /// Function is not implemented.
  const factory CalErrorKind.unsupportedAlgorithm(
    String field0,
  ) = CalErrorKind_UnsupportedAlgorithm;

  /// Tried to create a non-ephermal key with an ephermal provider.
  const factory CalErrorKind.ephermalKeyError() = CalErrorKind_EphermalKeyError;

  /// Errors that do not fall into the above classes.
  const factory CalErrorKind.other() = CalErrorKind_Other;
}

/// Key type for error pertaining to said key.
enum KeyType {
  public,
  private,
  publicAndPrivate,
  symmetric,
  ;
}
