// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { OidType } from "./OidType";

/**
 * Represents the collection of Object Identifiers (OIDs) used in various cryptographic standards.
 *
 * This enum provides a C-compatible representation of OIDs, which uniquely identify
 * algorithms and standards in cryptography. OIDs are used in multiple contexts, including
 * hashing algorithms, public key cryptography, encryption algorithms, key agreement protocols,
 * and certificate extensions.
 *
 * # Examples
 *
 * Using `ObjectIdentifiers` for RSA encryption:
 *
 * ```rust
 * use crypto_layer::common::crypto::pkcs::standards::{ObjectIdentifiers, OidType};
 *
 * fn main() {
 *     let oid = ObjectIdentifiers::Oid(OidType::RsaEncryption);
 * }
 * ```
 *
 * # Note
 *
 * The `#[repr(C)]` attribute ensures C compatibility, facilitating the use of these enums
 * in systems where interoperability with C is required. OIDs play a crucial role in the
 * configuration and operation of cryptographic systems, ensuring the correct application
 * of algorithms and standards.
 */
export type ObjectIdentifiers = { "Oid": OidType };
