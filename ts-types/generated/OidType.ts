// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.

/**
 * Enumerates specific Object Identifier (OID) types across cryptographic functionalities.
 *
 * Lists OIDs for hashing algorithms, public key cryptography, encryption algorithms,
 * key agreement protocols, certificate extensions, extended key usage identifiers, and
 * other notable OIDs.
 *
 * # Hashing Algorithms
 * - `Sha1WithRsaEncryption`, `Sha256WithRsaEncryption`, etc.
 *
 * # Public Key Cryptography
 * - `RsaEncryption`, `EcPublicKey`, `EcdsaWithSha*`
 *
 * # Encryption Algorithms
 * - `Aes128Cbc`, `Aes256Gcm`, etc.
 *
 * # Key Agreement
 * - `DhPublicNumber`, `EcdhStandardCurves`
 *
 * # Certificate Extensions
 * - `SubjectKeyIdentifier`, `ExtendedKeyUsage`, etc.
 *
 * # Extended Key Usage OIDs
 * - `ServerAuth`, `ClientAuth`, `CodeSigning`, etc.
 *
 * # Other notable OIDs
 * - `Pkix`, `Pkcs7Data`, `Pkcs9EmailAddress`, etc.
 *
 * # Examples
 *
 * Selecting an OID for AES 256 CBC encryption:
 *
 * ```rust
 * use crypto_layer::common::crypto::pkcs::standards::OidType;
 *
 * fn main() {
 *     let oid_type = OidType::Aes256Cbc;
 * }
 * ```
 *
 * # Note
 *
 * Uses `#[repr(C)]` for C language compatibility. Understanding and using the correct OIDs
 * is essential for ensuring cryptographic operations adhere to the intended standards and
 * protocols.
 */
export type OidType =
  | "Sha1WithRsaEncryption"
  | "Sha256WithRsaEncryption"
  | "Sha384WithRsaEncryption"
  | "Sha512WithRsaEncryption"
  | "IdSha1"
  | "IdSha256"
  | "IdSha384"
  | "IdSha512"
  | "RsaEncryption"
  | "IdRsaSsaPss"
  | "EcPublicKey"
  | "EcdsaWithSha1"
  | "EcdsaWithSha256"
  | "EcdsaWithSha384"
  | "EcdsaWithSha512"
  | "Aes128Cbc"
  | "Aes192Cbc"
  | "Aes256Cbc"
  | "Aes128Gcm"
  | "Aes192Gcm"
  | "Aes256Gcm"
  | "DhPublicNumber"
  | "EcdhStandardCurves"
  | "EcdhSpecifiedCurves"
  | "SubjectKeyIdentifier"
  | "KeyUsage"
  | "SubjectAltName"
  | "BasicConstraints"
  | "ExtendedKeyUsage"
  | "ServerAuth"
  | "ClientAuth"
  | "CodeSigning"
  | "EmailProtection"
  | "TimeStamping"
  | "OcspSigning"
  | "DocumentSigning"
  | "Pkix"
  | "Pkcs7Data"
  | "Pkcs7SignedData"
  | "Pkcs7EnvelopedData"
  | "Pkcs7SignedAndEnvelopedData"
  | "Pkcs7DigestData"
  | "Pkcs7EncryptedData"
  | "Pkcs9EmailAddress"
  | "Pkcs9UnstructuredName"
  | "Pkcs9ContentType"
  | "Pkcs9MessageDigest"
  | "Pkcs9SigningTime";
