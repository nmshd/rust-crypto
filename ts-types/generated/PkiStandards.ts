// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { PkcsType } from "./PkcsType";
import type { X509Type } from "./X509Type";

/**
 * Represents the various Public Key Infrastructure (PKI) standards.
 *
 * This enum provides a C-compatible representation of different PKI standards,
 * including PKCS (Public-Key Cryptography Standards), X.509, and PEM (Privacy-Enhanced Mail).
 * These standards cover a wide range of purposes, from cryptographic keys and certificates
 * storage to secure communication protocols.
 *
 * # Examples
 *
 * Using `PkiStandards` with PKCS#1:
 *
 * ```rust
 * use crypto_layer::common::crypto::pkcs::standards::{PkiStandards, PkcsType};
 *
 * fn main() {
 *     let pki_standard = PkiStandards::Pkcs(PkcsType::Pkcs1);
 * }
 * ```
 *
 * Using `PkiStandards` with X.509 Certificates:
 *
 * ```rust
 * use crypto_layer::common::crypto::pkcs::standards::{PkiStandards, X509Type};
 *
 * fn main() {
 *     let pki_standard = PkiStandards::X509(X509Type::Certificate);
 * }
 * ```
 *
 * # Note
 *
 * The `#[repr(C)]` attribute ensures C compatibility, making these enums suitable for
 * interfacing with C-based systems. They encompass a broad range of PKI applications,
 * from encryption and digital signatures to certificate management.
 */
export type PkiStandards = { "Pkcs": PkcsType } | { "X509": X509Type } | "Pem";
